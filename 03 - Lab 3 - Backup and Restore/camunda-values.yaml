global:
  kibana:
    elabled: true
identity:
  enabled: true
  ingress:
    enabled: true
    className: nginx
    path: /
    pathType: Prefix
    host: "camunda-identity.127.0.0.1.nip.io"

connectors:
  enabled: false

operate:
  env:
  - name: CAMUNDA_OPERATE_BACKUP_REPOSITORY_NAME
    value: "operate-backup"
  ingress:
    enabled: true
    className: nginx
    path: /
    pathType: Prefix
    host: "camunda-operate.127.0.0.1.nip.io"

optimize:
  env:
  - name: CAMUNDA_OPTIMIZE_BACKUP_REPOSITORY_NAME
    value: "optimize-backup"

tasklist:
  env:
  - name: CAMUNDA_TASKLIST_BACKUP_REPOSITORY_NAME
    value: "tasklist-backup"

zeebe-gateway:
  replicas: 1
  env:
  - name: ZEEBE_GATEWAY_SECURITY_AUTHENTICATION_MODE
    value: none
# Backup
zeebe:
  env:
  - name: ZEEBE_BROKER_DATA_BACKUP_STORE
    value: "S3"
  - name: ZEEBE_BROKER_DATA_BACKUP_S3_BUCKETNAME
    value: "zeebe-backup"
  - name: ZEEBE_BROKER_DATA_BACKUP_S3_FORCEPATHSTYLEACCESS
    value: "true"
  - name: ZEEBE_BROKER_DATA_BACKUP_S3_ENDPOINT
    value: "http://minio:9000"
  - name: ZEEBE_BROKER_DATA_BACKUP_S3_ACCESSKEY
    value: "minioadmin"
  - name: ZEEBE_BROKER_DATA_BACKUP_S3_SECRETKEY
    value: "minioadmin"
  - name: ZEEBE_BROKER_DATA_BACKUP_S3_REGION
    value: "us-east-1"

elasticsearch:
  global:
   kibanaEnabled: true
  kibana:
    readinessProbe:
      enabled: false
  # Workaround for https://github.com/bitnami/charts/issues/27607
  extraVolumeMounts:
    - name: empty-dir
      mountPath: /bitnami/elasticsearch
      subPath: app-volume-dir
  initScripts:
    init-keystore.sh: |
      #!/bin/bash
      set -e

      echo "Adding S3 access keys to Elasticsearch keystore..."

      # Add S3 client default keys to the keystore
      echo "$S3_SECRET_KEY" | elasticsearch-keystore add -f -x s3.client.default.secret_key
      echo "$S3_ACCESS_KEY" | elasticsearch-keystore add -f -x s3.client.default.access_key

  extraEnvVars:
  - name: S3_SECRET_KEY
    value: minioadmin
  - name: S3_ACCESS_KEY
    value: minioadmin
